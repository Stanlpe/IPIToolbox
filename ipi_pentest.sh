#!/bin/bash

DATA_FILE="data_outils_pentest.json"
GITHUB_BASE_URL="https://github.com/Stanlpe/IPIToolbox/blob/main/Cheatsheets"

# Couleurs et style
clear
echo -e "\e[35m╬══════════════════════════════════════════════════════╫"
echo -e "║          💗   I P I  - Pentest Toolkit   💗     ║"
echo -e "╞══════════════════════════════════════════════════════╝\e[0m"
echo ""

# Fonction de retour au menu principal
retour_menu() {
    exec "$0"
    exit
}

# Données Excel codées en dur (issues de l'analyse)
declare -A BIENS
CATEGORIES=(
  "Clefs de chiffrement"
  "Clés de chiffrement et certificats"
  "Configurations opérationnelles et/ou de sécurité, sensibles"
  "Données chiffrées sensibles"
  "Faiblesses connues"
  "Identité et/ou authentification"
  "Journalisation et surveillance"
  "Mécanismes d’anonymisation et de protection"
  "Outils de développement"
  "Processus opérationnels et/ou de sécurité, sensibles"
  "Ressources humaines"
  "Services critiques"
  "Services de messagerie (e-mail, messageries)"
  "Services d’annuaire"
  "Structures physiques, logiciels , et/ou réseaux"
  "Systèmes de sauvegarde"
  "Systèmes et infrastructures critiques"
  "Transmission"
  "Équipements utilisateurs"
)

BIENS["Clefs de chiffrement"]="Clés cryptographiques"
BIENS["Clés de chiffrement et certificats"]="Clés privées|Certificats SSL/TLS"
BIENS["Configurations opérationnelles et/ou de sécurité, sensibles"]="Paramètres de sécurité"
BIENS["Données chiffrées sensibles"]="Bases de données|Fichiers chiffrés"
BIENS["Faiblesses connues"]="Vulnérabilités logiciels"
BIENS["Identité et/ou authentification"]="Identifiants|Mots de passe"
BIENS["Journalisation et surveillance"]="Logs|Systèmes de monitoring"
BIENS["Mécanismes d’anonymisation et de protection"]="Outils d’anonymisation"
BIENS["Outils de développement"]="Scripts|Librairies"
BIENS["Processus opérationnels et/ou de sécurité, sensibles"]="Protocoles de sécurité|Politiques internes"
BIENS["Ressources humaines"]="Accès|Comportements"
BIENS["Services critiques"]="Applications métiers|Services web"
BIENS["Services de messagerie (e-mail, messageries)"]="Comptes mail"
BIENS["Services d’annuaire"]="LDAP|Active Directory"
BIENS["Structures physiques, logiciels , et/ou réseaux"]="Matériels|Logiciels critiques"
BIENS["Systèmes de sauvegarde"]="Volumes de sauvegarde"
BIENS["Systèmes et infrastructures critiques"]="Serveurs|Équipements réseau"
BIENS["Transmission"]="Données en transit"
BIENS["Équipements utilisateurs"]="Postes de travail|Mobiles"

# Étape 1 - Choix de la catégorie
echo "📂 Sélectionnez une catégorie de bien essentiel :"
select cat in "${CATEGORIES[@]}" "Fermer"; do
    if [[ "$REPLY" -eq $((${#CATEGORIES[@]} + 1)) ]]; then
        echo "Fermeture du script."
        exit 0
    elif [[ -n "$cat" ]]; then
        break
    fi
done

# Étape 2 - Choix du bien essentiel
IFS='|' read -ra biens_array <<< "${BIENS[$cat]}"
echo ""
echo "🔐 Sélectionnez un bien essentiel :"
select bien in "${biens_array[@]}" "Retour"; do
    if [[ "$REPLY" -eq $((${#biens_array[@]} + 1)) ]]; then
        retour_menu
    elif [[ -n "$bien" ]]; then
        break
    fi
done

# Étape 3 - Choix du niveau OSI
declare -A OSI_NAMES=(
    ["01_physique"]="Physique"
    ["02_liaison"]="Liaison"
    ["03_reseau"]="Réseau"
    ["04_transport"]="Transport"
    ["05_session"]="Session"
    ["06_presentation"]="Présentation"
    ["07_application"]="Application"
)

ordered_keys=("01_physique" "02_liaison" "03_reseau" "04_transport" "05_session" "06_presentation" "07_application")

echo ""
echo "📶 Choisissez un niveau OSI :"
for i in "${!ordered_keys[@]}"; do
    num=$((i+1))
    key="${ordered_keys[$i]}"
    printf "%2d) %s\n" "$num" "${OSI_NAMES[$key]}"
done
echo " 8) Retour"

read -p "#? " choix

if [[ "$choix" =~ ^[1-7]$ ]]; then
    osi="${ordered_keys[$((choix-1))]}"
elif [[ "$choix" == "8" ]]; then
    retour_menu
else
    echo "Choix invalide, retour au menu."
    retour_menu
fi

# Recherche dans le fichier JSON
match=$(jq -r --arg cat "$cat" --arg bien "$bien" --arg osi "$osi" \
    '.[] | select(.categorie == $cat and .bien_essentiel == $bien and .niveau_osi == $osi)' "$DATA_FILE")

if [[ -n "$match" ]]; then
    attaque=$(echo "$match" | jq -r '.attaque')
    outil=$(echo "$match" | jq -r '.outil')
    risque=$(echo "$match" | jq -r '.risque_associe')
    confidentialite=$(echo "$match" | jq -r '.risques_cia.confidentialite')
    integrite=$(echo "$match" | jq -r '.risques_cia.integrite')
    disponibilite=$(echo "$match" | jq -r '.risques_cia.disponibilite')

    echo ""
    echo -e "\e[33m🎯 Risque associé :\e[0m $risque"
    echo -e "\e[33m🔒 Confidentialité :\e[0m $confidentialite"
    echo -e "\e[33m🔒 Intégrité       :\e[0m $integrite"
    echo -e "\e[33m🔒 Disponibilité   :\e[0m $disponibilite"
    echo -e "\e[33m🖠️  Outil recommandé :\e[0m $outil"

    nom_fichier=$(echo "$attaque" | iconv -f utf-8 -t ascii//TRANSLIT | tr '[:upper:]' '[:lower:]' | tr ' ' '_' | tr -dc '[:alnum:]_').md
    url="https://github.com/Stanlpe/IPIToolbox/blob/main/Cheatsheets/${osi}/${nom_fichier}"

    echo ""
    echo -e "\e[36m📘 Chargement de la cheatsheet :\e[0m $url"
    echo ""
    if curl --output /dev/null --silent --head --fail "$url"; then
        xdg-open "$url" >/dev/null 2>&1
    else
        echo "❌ Cheatsheet introuvable à cette URL."
    fi
else
    echo ""
    echo "❌ Aucune donnée trouvée pour cette combinaison."
fi
